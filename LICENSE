# MCP Stockflow

A stock market data provider for Claude that offers comprehensive stock information, historical data, and options chain analysis.

## Features

- Comprehensive stock data including financials, analyst ratings, and calendar events
- Historical price data with technical indicators
- Options chain data with advanced greeks and analysis
- Error handling and retry mechanisms
- Comprehensive logging

## Version

1.0.0

## Installation

1. Clone the repository:
```bash
git clone https://github.com/yourusername/mcp-stockflow.git
cd mcp-stockflow
```

2. Install dependencies:
```bash
pip install -r requirements.txt
```

3. Add to your Claude configuration:
In your `claude-desktop-config.json`, add the following to the `mcpServers` section:

```json
{
    "mcpServers": {
        "stockflow": {
            "command": "python",
            "args": ["path/to/stockflow.py"]
        }
    }
}
```

Replace "path/to/stockflow.py" with the full path to where you saved the stockflow.py file.

## Usage Prompt for Claude

When working with Claude, you can use this prompt to help it understand the available tools:

"I've enabled the stockflow tools which give you access to stock market data. You can use these three main functions:

1. `get_stock_data` - Get comprehensive stock info:
```python
{
    "symbol": "AAPL",
    "include_financials": true,  # optional
    "include_analysis": true,    # optional
    "include_calendar": true     # optional
}
```

2. `get_historical_data` - Get price history and technical indicators:
```python
{
    "symbol": "AAPL",
    "period": "1y",        # 1d, 5d, 1mo, 3mo, 6mo, 1y, 2y, 5y, 10y, ytd, max
    "interval": "1d",      # 1m, 2m, 5m, 15m, 30m, 60m, 90m, 1h, 1d, 5d, 1wk, 1mo, 3mo
    "prepost": false       # optional - include pre/post market data
}
```

3. `get_options_chain` - Get options data:
```python
{
    "symbol": "AAPL",
    "expiration_date": "2024-12-20",  # optional - uses nearest date if not specified
    "include_greeks": true            # optional
}
```

All responses include current price data, error handling, and comprehensive market information."

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Attribution Requirements

If you use this software in your project, please provide attribution by:
1. Including the original license file
2. Adding a reference to this repository in your documentation
3. Maintaining the original copyright notice in the source code

## Author

Todd Wolven - (https://github.com/twolven)

## Acknowledgments

- Built using yfinance for market data
- Developed for use with Anthropic's Claude
- Uses the Model Context Protocol (MCP) for Claude integration